
# Common configurations for several scripts
# this configs are not men to be edited by the users
#
# Do not change this unless you know what are you doing!!! 

#### pkgs to install for Debian 10.x "Buster"
DEBIAN_BASE_PKGS="postfix postfix-pcre postfix-ldap dovecot-pop3d dovecot-imapd dovecot-ldap dovecot-sieve dovecot-managesieved libnet-ldap-perl ldap-utils rsync dnsutils pflogsumm mailutils amavisd-new p7zip-full unrar-free cabextract "

# pkgs to install for Ubuntu Bionic & Focal (18.04/20.04)
UBUNTU_BASE_PKGS="postfix postfix-pcre postfix-ldap dovecot-pop3d dovecot-imapd dovecot-ldap dovecot-sieve dovecot-managesieved libnet-ldap-perl ldap-utils rsync dnsutils pflogsumm mailutils amavisd-new-postfix p7zip-full p7zip-rar unrar-free cabextract"

### Spamassassin pkgs
DEBIAN_SPAMD_PKGS="spamassassin"

### Clamav pkgs
DEBIAN_AV_PKGS="clamav-freshclam clamav-daemon"

#### Common service names to start/stop (TODO if the same as PKGCOMMON reduce it at the end)
SERVICENAMES="dovecot postfix amavisd-new"

### AV servicenames
AV_SERVICENAMES="clamav-daemon clamav-freshclam"

### SPAMD servicename
SPAMD_SERVICNAME="spamassassin"

# get the var names in the config file
VARS=`cat mailad.conf | grep -v "#" | sort -r | uniq | cut -d "=" -f 1`

### Special vars that need a special care
# local domain: will be filled on provision.sh script
ESCDOMAIN=""

# national/regional domain to restric some users
ESCNATIONAL=".cu"

###########################################
# Common functions
###########################################

# vars needed for the fucntions below
PKGS=""

# debian alike pkgs already installed check
function already_installed_debs {
    # list of pkgs are dynamically assigned by the code below

    # Check if there is already one of them installed and warn the user about it
    # offering a way to uninstall
    for p in `echo $PKGCOMMON | xargs` ; do
        # test if the pkg is installed
        LIST=`dpkg -l | grep $p`
        if [ "$LIST" != "" ] ; then
            # fail, some of the packages are installed
            echo "===> ERROR!"
            echo "     Some of the pkgs we are about to install are already installed"
            echo "     so, this system is dirty and it's not recommended to install it"
            echo "     here; or you can force a purge runnig: 'make install-purge'"
            echo "     and run 'make install' again"
            echo " "
            exit 1
        fi
    done
}

# debian packages install
function install_debs {
    # do it
    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install $PKGS -y

    # checking for success
    R=$?
    if [ $R -ne 0 ] ; then
        # apt install failed on any way
        echo "==========================================================================="
        echo "ERROR: The update and install of the main software failed, this is mostly"
        echo "       a problem related to a bad configured repository or a not reacheable"
        echo "       one, please fix that and try again."
        echo "==========================================================================="
        echo "       The deps install process will stop now"
        echo "==========================================================================="

        # exit 1
        exit 1
    fi
}

# return the pkgs for the AV install if it's enabled
function debian_av_pkgs {
    # load the config file on demand
    source /etc/mailad/mailad.conf

    # check for AV
    if [ "$ENABLE_AV" == "yes" -o "$ENABLE_AV" == "Yes" ] ; then
        echo "${DEBIAN_AV_PKGS}"
    fi
}

# return the pkgs for the spamd install if it's enabled
function debian_spamd_pkgs {
    # load the config file on demand
    source /etc/mailad/mailad.conf

    # check for spamd
    if [ "$ENABLE_SPAMD" == "yes" -o "$ENABLE_SPAMD" == "Yes" ] ; then
        echo "${DEBIAN_SPAMD_PKGS}"
    fi
}

# craft the correct set if pkgs
function craft_pkg_list {
    # Just one parameter, the distro name in lowercase

    # load the config file on demand
    source /etc/mailad/mailad.conf

    case "$1" in
    "debian")
        AV=`debian_av_pkgs`
        SPAMD=`debian_spamd_pkgs`
        PKGS="${DEBIAN_BASE_PKGS} $AV $SPAMD" ;;
    "ubuntu")
        AV=`debian_av_pkgs`
        SPAMD=`debian_spamd_pkgs`
        PKGS="${DEBIAN_BASE_PKGS} $AV $SPAMD" ;;
    *)
        echo "=== ERROR === Not suported distribution"
        exit 1 ;;
    esac
}

# remove the pkgs in debian alike distros
function debian_remove_pkgs {
    # add and sterisk at the end of the PKGS to wipe al related packages
    P=`echo "$PKGS" | tr ' ' '\n' | sort | uniq | xargs | sed s/" "/"* "/g`

    # remove all pkgs letting apt build the tree
    # two times to fix problems with postfix-amavis-new
    env DEBIAN_FRONTEND=noninteractive apt-get purge $P* -y
    env DEBIAN_FRONTEND=noninteractive apt-get purge $P* -y

    # autoremove some of the pkgs left over
    env DEBIAN_FRONTEND=noninteractive apt autoremove -y
}
